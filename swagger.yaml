openapi: 3.0.0
info:
  title: ApiJob
  contact: {}
  version: "1.0"
servers:
  - url: https://prova-69dh.onrender.com/api/v1
    variables: {}
paths:
  /login:
    post:
      tags:
        - User
      summary: login
      operationId: login
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/loginrequest"
                - example:
                    name: Vas
                    email: vas@gmail.com
                    password: ciao
            example:
              name: Vas
              email: vas@gmail.com
              password: ciao
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security: []
  /register:
    post:
      tags:
        - User
      summary: register
      operationId: register
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/registerrequest"
                - example:
                    name: Joe6
                    email: joe6@gmail.com
                    password: ciao
            example:
              name: Joe6
              email: joe6@gmail.com
              password: ciao
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security: []
  /jobs:
    post:
      tags:
        - Job
      summary: createJob
      operationId: createJob
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/createJobRequest"
                - example:
                    company: unemployed
                    position: none
            example:
              company: unemployed
              position: none
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security:
        - bearer: []
    get:
      tags:
        - Job
      summary: getAllJobs
      operationId: getAllJobs
      parameters: []
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security:
        - bearer: []
  /jobs/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: The user ID
    get:
      tags:
        - Job
      summary: getJob
      operationId: getJob
      parameters: []
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security:
        - bearer: []
    delete:
      tags:
        - Job
      summary: deleteJob
      operationId: deleteJob
      parameters: []
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security:
        - bearer: []
    patch:
      tags:
        - Job
      summary: updateJob
      operationId: updateJob
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/updateJobRequest"
                - example:
                    company: lino.snc
                    position: ceo
            example:
              company: lino.snc
              position: ceo
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security:
        - bearer: []
components:
  schemas:
    loginrequest:
      title: loginrequest
      required:
        - name
        - email
        - password
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
      example:
        name: Vas
        email: vas@gmail.com
        password: ciao
    registerrequest:
      title: registerrequest
      required:
        - name
        - email
        - password
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
      example:
        name: Joe6
        email: joe6@gmail.com
        password: ciao
    createJobRequest:
      title: createJobRequest
      required:
        - company
        - position
      type: object
      properties:
        company:
          type: string
        position:
          type: string
      example:
        company: unemployed
        position: none
    updateJobRequest:
      title: updateJobRequest
      required:
        - company
        - position
      type: object
      properties:
        company:
          type: string
        position:
          type: string
      example:
        company: lino.snc
        position: ceo
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
security: []
tags:
  - name: User
    description: ""
  - name: Job
    description: ""
